# name: Basic CI

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   test-and-build:
#     name: Test & Build
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'

#       - name: Setup pnpm
#         uses: pnpm/action-setup@v4
#         with:
#           version: 8

#       - name: Install dependencies
#         run: pnpm install --frozen-lockfile

#       - name: Run linting
#         run: pnpm run eslint

#       - name: Check formatting
#         run: pnpm run prettier --check

#       - name: Type check
#         run: npx tsc --noEmit

#       - name: Build project
#         run: pnpm run build

#       - name: Upload build artifacts
#         uses: actions/upload-artifact@v4
#         with:
#           name: dist
#           path: dist/


name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - publish 
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build project
        run: pnpm run build
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        id: pages
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          # Set production branch for main, otherwise it's a preview
          productionBranch: main

      - name: Add deployment URL to PR comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Preview deployment is ready!**\n\nâœ… Preview URL: ${{ steps.pages.outputs.url }}\n\nBuilt from commit: ${{ github.sha }}`
            })